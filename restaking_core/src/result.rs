use solana_program::program_error::ProgramError;

pub type RestakingCoreResult<T> = Result<T, RestakingCoreError>;

#[derive(Debug, PartialEq, Eq)]
pub enum RestakingCoreError {
    AvsInvalidAdmin,
    VaultFailedToActivate,
    VaultFailedToDeactivate,
    VaultNotFound,
    OperatorInvalidAdmin,
    VaultNotActive,
    AvsInvalidOperatorAdmin,
    AvsInvalidVaultAdmin,
    OperatorAlreadyAdded,
    AvsNotActive,
    AvsNotFound,
    AvsInvalidSlasherAdmin,
    VaultNotActiveOrCoolingDown,
    VaultSlasherAlreadyExists,
    VaultSlasherNotActive,
    VaultSlasherNotFound,
    OperatorAlreadyRemoved,
    OperatorNotFound,
    AvsInvalidWithdrawAdmin,
    AvsFailedToActivate,
    AvsFailedToDeactivate,
    SlasherNotActive,
    OperatorNotActive,
    AvsOperatorTicketEmpty,
    AvsOperatorTicketInvalidOwner,
    AvsOperatorTicketInvalidAccountType,
    AvsOperatorTicketInvalidPda,
    AvsSlasherTicketEmpty,
    AvsSlasherTicketInvalidOwner,
    AvsSlasherTicketInvalidAccountType,
    AvsSlasherTicketInvalidPda,
    AvsVaultTicketEmpty,
    AvsVaultTicketInvalidOwner,
    AvsVaultTicketInvalidAccountType,
    AvsVaultTicketInvalidPda,
    OperatorAvsTicketEmpty,
    OperatorAvsTicketInvalidOwner,
    OperatorAvsTicketInvalidAccountType,
    OperatorAvsTicketInvalidPda,
    OperatorVaultTicketEmpty,
    OperatorVaultTicketInvalidOwner,
    OperatorVaultTicketInvalidAccountType,
    OperatorVaultTicketInvalidPda,
    OperatorVaultTicketInvalidData(String),
    AvsOperatorTicketInvalidData(String),
    AvsSlasherTicketInvalidData(String),
    AvsVaultTicketInvalidData(String),
    OperatorAvsTicketInvalidData(String),
    AvsOperatorTicketExpectedWritable,
    AvsSlasherTicketNotWritable,
    AvsVaultTicketNotWritable,
    OperatorAvsTicketNotWritable,
    OperatorVaultTicketNotWritable,
    OperatorCountOverflow,
    AvsOperatorCountOverflow,
    OperatorAvsTicketNotActive,
    AvsVaultCountOverflow,
    AvsVaultTicketInactive,
    AvsSlasherCountOverflow,
    AvsVaultSlasherTicketInactive,
    AvsOperatorTicketInvalidState,
    AvsOperatorTicketInactive,
    OperatorInvalidAvsAdmin,
    OperatorInvalidVaultAdmin,
    OperatorAvsCountOverflow,
    OperatorVaultCountOverflow,
    OperatorVaultTicketAlreadyDeactivated,
    AvsEmpty,
    AvsInvalidOwner,
    AvsInvalidData(String),
    AvsInvalidAccountType,
    AvsInvalidPda,
    AvsNotWritable,
    OperatorVaultTicketInactive,
    OperatorAvsTicketAlreadyInactive,
    AvsOverflow,
    OperatorOverflow,
    ConfigNotWritable,
    ConfigEmpty,
    ConfigInvalidOwner,
    ConfigInvalidData(String),
    ConfigInvalidAccountType,
    ConfigInvalidPda,
    OperatorDataEmpty,
    OperatorInvalidOwner,
    OperatorInvalidData(String),
    OperatorInvalidAccountType,
    OperatorInvalidPda,
    OperatorNotWritable,
}

impl From<RestakingCoreError> for ProgramError {
    fn from(_value: RestakingCoreError) -> Self {
        Self::Custom(0)
    }
}
